c
game.test_reset
game.print_grid(response.parsed_response["grid"])
response = game.test_fire(0, 3)
game.print_grid(response.parsed_response["grid"])
game.brute_force
c
game.print_grid(response.parsed_response["grid"])
response = game.test_fire(0, 3)
game.print_grid(response.parsed_response["grid"])
response = game.test_fire(0, 1)
response = game.test_fire(0, 0)
game.print_grid(response.parsed_response["grid"])
print_grid(response.parsed_response["grid"])
print_grid(parsed_response["grid"])
responseprint_grid(parsed_response["grid"])
response
response.parsed_response
response = game.test_fire(6, 7)
game.brute_force
brute_force
game
print_grid(parsed_response["grid"])
brute_force
c!
brute_force
c
response.parsed_response
JSON.parse(response.body)
response.body
response = game.test_fire(0, 10)
response.body
response = game.test_fire(0, 14)
response.body
TestBattleshipGame.class.get("/fire?test=yes", @options)
game.class.get("/fire?test=yes", @options)
self.class.get("/fire?test=yes", @options)
print_grid(response.parsed_response["grid"])
response = game.test_fire(0, 14)
print_grid(response.parsed_response["grid"])
response = game.test_fire(0, 1)
print_grid(response.parsed_response["grid"])
def print_grid(grid_string)
    grid_string.chars.each_slice(12).with_index do |row, index|
      formatted_row_number = format('Row %-3d:', index + 1) # Adjusts the spacing for row numbers
      puts "#{formatted_row_number} #{row.join(' ')}"
    end
  end
print_grid(response.parsed_response["grid"])
def print_grid(grid_string)
    grid_string.chars.each_slice(12).with_index do |row, index|
      puts "Row #{index + 1}: #{row.join(' ')}"
    end
  end
response.parsed_response["grid"].length / 12
response.parsed_response["grid"].length
response.parsed_response["grid"]
response.parsed_response
response = game.test_fire(0, 0)
response.parsed_response
game.test_fire(0, 0)
game.test_fire(6, 7)
c!
game.test_reset
availableTries
response = game.test_fire(6, 10)
puts "Fire Response: #{response}"
response
response = game.test_fire(6, 7)
game.test_fire(6, 7)
game
gaem
